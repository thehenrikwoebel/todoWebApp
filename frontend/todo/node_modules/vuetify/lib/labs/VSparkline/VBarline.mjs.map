{"version":3,"file":"VBarline.mjs","names":["computed","makeLineProps","genericComponent","getUid","propsFactory","useRender","makeVBarlineProps","autoLineWidth","Boolean","VBarline","name","props","setup","_ref","slots","uid","id","autoDrawDuration","Number","hasLabels","showLabels","labels","length","label","lineWidth","parseFloat","totalWidth","Math","max","modelValue","value","width","boundary","minX","maxX","minY","maxY","parseInt","height","genBars","values","totalValues","maxValue","minValue","min","gridX","gridY","horizonY","abs","map","index","x","y","parsedLabels","points","item","len","i","push","String","bars","offsetX","gradientData","gradient","slice","reverse","_createVNode","gradientDirection","color","smooth","autoDraw","_Fragment","textAnchor","dominantBaseline","fill","labelSize"],"sources":["../../../src/labs/VSparkline/VBarline.tsx"],"sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { makeLineProps } from './util/line'\nimport { genericComponent, getUid, propsFactory, useRender } from '@/util'\n\n// Types\nexport type VBarlineSlots = {\n  default: void\n  label: { index: number, value: string }\n}\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\nexport const makeVBarlineProps = propsFactory({\n  autoLineWidth: Boolean,\n\n  ...makeLineProps(),\n}, 'VBarline')\n\nexport const VBarline = genericComponent<VBarlineSlots>()({\n  name: 'VBarline',\n\n  props: makeVBarlineProps(),\n\n  setup (props, { slots }) {\n    const uid = getUid()\n    const id = computed(() => props.id || `barline-${uid}`)\n    const autoDrawDuration = computed(() => Number(props.autoDrawDuration) || 500)\n\n    const hasLabels = computed(() => {\n      return Boolean(\n        props.showLabels ||\n        props.labels.length > 0 ||\n        !!slots?.label\n      )\n    })\n\n    const lineWidth = computed(() => parseFloat(props.lineWidth) || 4)\n\n    const totalWidth = computed(() => Math.max(props.modelValue.length * lineWidth.value, Number(props.width)))\n\n    const boundary = computed<Boundary>(() => {\n      return {\n        minX: 0,\n        maxX: totalWidth.value,\n        minY: 0,\n        maxY: parseInt(props.height, 10),\n      }\n    })\n\n    function genBars (\n      values: number[],\n      boundary: Boundary\n    ): Bar[] {\n      const { minX, maxX, minY, maxY } = boundary\n      const totalValues = values.length\n      let maxValue = Math.max(...values)\n      let minValue = Math.min(...values)\n\n      if (minValue > 0) minValue = 0\n      if (maxValue < 0) maxValue = 0\n\n      const gridX = maxX / totalValues\n      const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n      const horizonY = maxY - Math.abs(minValue * gridY)\n\n      return values.map((value, index) => {\n        const height = Math.abs(gridY * value)\n\n        return {\n          x: minX + index * gridX,\n          y: horizonY - height +\n            +(value < 0) * height,\n          height,\n          value,\n        }\n      })\n    }\n\n    const parsedLabels = computed(() => {\n      const labels = []\n      const points = genBars(\n        props.modelValue.map(item => (typeof item === 'number' ? item : item.value)),\n        boundary.value\n      )\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = props.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    })\n\n    const bars = computed(() => genBars(props.modelValue.map(item => (typeof item === 'number' ? item : item.value)), boundary.value))\n    const offsetX = computed(() => (Math.abs(bars.value[0].x - bars.value[1].x) - lineWidth.value) / 2)\n\n    useRender(() => {\n      const gradientData = !props.gradient.slice().length ? [''] : props.gradient.slice().reverse()\n      return (\n        <svg\n          display=\"block\"\n        >\n          <defs>\n            <linearGradient\n              id={ id.value }\n              gradientUnits=\"userSpaceOnUse\"\n              x1={ props.gradientDirection === 'left' ? '100%' : '0' }\n              y1={ props.gradientDirection === 'top' ? '100%' : '0' }\n              x2={ props.gradientDirection === 'right' ? '100%' : '0' }\n              y2={ props.gradientDirection === 'bottom' ? '100%' : '0' }\n            >\n              {\n                gradientData.map((color, index) => (\n                  <stop offset={ index / (Math.max(gradientData.length - 1, 1)) } stop-color={ color || 'currentColor' } />\n                ))\n              }\n            </linearGradient>\n          </defs>\n\n          <clipPath id={ `${id.value}-clip` }>\n            {\n              bars.value.map(item => (\n                <rect\n                    x={ item.x + offsetX.value }\n                    y={ item.y }\n                    width={ lineWidth.value }\n                    height={ item.height }\n                    rx={ typeof props.smooth === 'number' ? props.smooth : props.smooth ? 2 : 0 }\n                    ry={ typeof props.smooth === 'number' ? props.smooth : props.smooth ? 2 : 0 }\n                >\n                  { props.autoDraw && (\n                    <>\n                      <animate\n                        attributeName=\"y\"\n                        from={ item.y + item.height }\n                        to={ item.y }\n                        dur={ `${autoDrawDuration.value}ms` }\n                        fill=\"freeze\"\n                      />\n                      <animate\n                        attributeName=\"height\"\n                        from=\"0\"\n                        to={ item.height }\n                        dur={ `${autoDrawDuration.value}ms` }\n                        fill=\"freeze\"\n                      />\n                    </>\n                  )}\n                </rect>\n              ))\n            }\n          </clipPath>\n\n          { hasLabels.value && (\n            <g\n              key=\"labels\"\n              style={{\n                textAnchor: 'middle',\n                dominantBaseline: 'mathematical',\n                fill: 'currentColor',\n              }}\n            >\n              {\n                parsedLabels.value.map((item, i) => (\n                  <text\n                    x={ item.x + offsetX.value + lineWidth.value / 2 }\n                    y={ (parseInt(props.height, 10) - 2) + (parseInt(props.labelSize, 10) || 7 * 0.75) }\n                    font-size={ Number(props.labelSize) || 7 }\n                  >\n                    { slots.label?.({ index: i, value: item.value }) ?? item.value }\n                  </text>\n                ))\n              }\n            </g>\n          )}\n\n          <g\n            clip-path={ `url(#${id.value}-clip)` }\n            fill={ `url(#${id.value})` }\n          >\n            <rect\n              x={ 0 }\n              y={ 0 }\n              width={ Math.max(props.modelValue.length * lineWidth.value, Number(props.width)) }\n              height={ props.height }\n            ></rect>\n          </g>\n        </svg>\n      )\n    })\n  },\n})\n\nexport type VBarline = InstanceType<typeof VBarline>\n"],"mappings":"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"}