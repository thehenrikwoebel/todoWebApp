{"ast":null,"code":"import { withDirectives as _withDirectives, createVNode as _createVNode, vShow as _vShow } from \"vue\";\n// Styles\nimport \"./VCounter.css\";\n\n// Components\nimport { VSlideYTransition } from \"../transitions/index.mjs\"; // Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVCounterProps = propsFactory({\n  active: Boolean,\n  max: [Number, String],\n  value: {\n    type: [Number, String],\n    default: 0\n  },\n  ...makeComponentProps(),\n  ...makeTransitionProps({\n    transition: {\n      component: VSlideYTransition\n    }\n  })\n}, 'VCounter');\nexport const VCounter = genericComponent()({\n  name: 'VCounter',\n  functional: true,\n  props: makeVCounterProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const counter = computed(() => {\n      return props.max ? `${props.value} / ${props.max}` : String(props.value);\n    });\n    useRender(() => _createVNode(MaybeTransition, {\n      \"transition\": props.transition\n    }, {\n      default: () => [_withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-counter', props.class],\n        \"style\": props.style\n      }, [slots.default ? slots.default({\n        counter: counter.value,\n        max: props.max,\n        value: props.value\n      }) : counter.value]), [[_vShow, props.active]])]\n    }));\n    return {};\n  }\n});","map":{"version":3,"names":["VSlideYTransition","makeComponentProps","makeTransitionProps","MaybeTransition","computed","genericComponent","propsFactory","useRender","makeVCounterProps","active","Boolean","max","Number","String","value","type","default","transition","component","VCounter","name","functional","props","setup","_ref","slots","counter","_createVNode","_withDirectives","class","style","_vShow"],"sources":["../../../src/components/VCounter/VCounter.tsx"],"sourcesContent":["// Styles\nimport './VCounter.sass'\n\n// Components\nimport { VSlideYTransition } from '@/components/transitions'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Component } from 'vue'\n\nexport const makeVCounterProps = propsFactory({\n  active: Boolean,\n  max: [Number, String],\n  value: {\n    type: [Number, String],\n    default: 0,\n  },\n\n  ...makeComponentProps(),\n  ...makeTransitionProps({\n    transition: { component: VSlideYTransition as Component },\n  }),\n}, 'VCounter')\n\nexport type VCounterSlot = {\n  counter: string\n  max: string | number | undefined\n  value: string | number | undefined\n}\n\ntype VCounterSlots = {\n  default: VCounterSlot\n}\n\nexport const VCounter = genericComponent<VCounterSlots>()({\n  name: 'VCounter',\n\n  functional: true,\n\n  props: makeVCounterProps(),\n\n  setup (props, { slots }) {\n    const counter = computed(() => {\n      return props.max ? `${props.value} / ${props.max}` : String(props.value)\n    })\n\n    useRender(() => (\n      <MaybeTransition transition={ props.transition }>\n        <div\n          v-show={ props.active }\n          class={[\n            'v-counter',\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default\n            ? slots.default({\n              counter: counter.value,\n              max: props.max,\n              value: props.value,\n            })\n            : counter.value\n          }\n        </div>\n      </MaybeTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VCounter = InstanceType<typeof VCounter>\n"],"mappings":";AAAA;AACA;;AAEA;AAAA,SACSA,iBAAiB,oCAE1B;AAAA,SACSC,kBAAkB;AAAA,SAClBC,mBAAmB,EAAEC,eAAe,4CAE7C;AACA,SAASC,QAAQ,QAAQ,KAAK;AAAA,SACrBC,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,gCAElD;AAGA,OAAO,MAAMC,iBAAiB,GAAGF,YAAY,CAAC;EAC5CG,MAAM,EAAEC,OAAO;EACfC,GAAG,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;EACrBC,KAAK,EAAE;IACLC,IAAI,EAAE,CAACH,MAAM,EAAEC,MAAM,CAAC;IACtBG,OAAO,EAAE;EACX,CAAC;EAED,GAAGf,kBAAkB,CAAC,CAAC;EACvB,GAAGC,mBAAmB,CAAC;IACrBe,UAAU,EAAE;MAAEC,SAAS,EAAElB;IAA+B;EAC1D,CAAC;AACH,CAAC,EAAE,UAAU,CAAC;AAYd,OAAO,MAAMmB,QAAQ,GAAGd,gBAAgB,CAAgB,CAAC,CAAC;EACxDe,IAAI,EAAE,UAAU;EAEhBC,UAAU,EAAE,IAAI;EAEhBC,KAAK,EAAEd,iBAAiB,CAAC,CAAC;EAE1Be,KAAKA,CAAED,KAAK,EAAAE,IAAA,EAAa;IAAA,IAAX;MAAEC;IAAM,CAAC,GAAAD,IAAA;IACrB,MAAME,OAAO,GAAGtB,QAAQ,CAAC,MAAM;MAC7B,OAAOkB,KAAK,CAACX,GAAG,GAAI,GAAEW,KAAK,CAACR,KAAM,MAAKQ,KAAK,CAACX,GAAI,EAAC,GAAGE,MAAM,CAACS,KAAK,CAACR,KAAK,CAAC;IAC1E,CAAC,CAAC;IAEFP,SAAS,CAAC,MAAAoB,YAAA,CAAAxB,eAAA;MAAA,cACsBmB,KAAK,CAACL;IAAU;MAAAD,OAAA,EAAAA,CAAA,MAAAY,eAAA,CAAAD,YAAA;QAAA,SAGnC,CACL,WAAW,EACXL,KAAK,CAACO,KAAK,CACZ;QAAA,SACOP,KAAK,CAACQ;MAAK,IAEjBL,KAAK,CAACT,OAAO,GACXS,KAAK,CAACT,OAAO,CAAC;QACdU,OAAO,EAAEA,OAAO,CAACZ,KAAK;QACtBH,GAAG,EAAEW,KAAK,CAACX,GAAG;QACdG,KAAK,EAAEQ,KAAK,CAACR;MACf,CAAC,CAAC,GACAY,OAAO,CAACZ,KAAK,MAAAiB,MAAA,EAbRT,KAAK,CAACb,MAAM;IAAA,EAiB1B,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}